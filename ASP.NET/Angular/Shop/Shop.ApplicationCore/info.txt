1. Database First.

-- Polecenie tworzy modele klas na podstawie tabel baz danych.
https://docs.microsoft.com/pl-pl/ef/core/cli/powershell#scaffold-dbcontext
Scaffold-DbContext "Data Source=.\SQL2017;Initial Catalog=Shop;Integrated Security=True" -Provider Microsoft.EntityFrameworkCore.SqlServer -project Shop.ApplicationCore -OutputDir Models -Context ApplicationDbContext -ContextDir "." -DataAnnotations -force -table Kraj

-- Instalacja dodatków 'dotnet-ef'. Wymagane jeśli polecenie 'dotnet ef' generuje wyjątek, że nie istnieje.
https://docs.microsoft.com/pl-pl/ef/core/cli/dotnet#installing-the-tools
dotnet tool install --global dotnet-ef

-- Polecenie tworzy modele klas na podstawie tabel baz danych.
https://docs.microsoft.com/pl-pl/ef/core/cli/dotnet#dotnet-ef-dbcontext-scaffold
dotnet ef dbcontext scaffold "Data Source=.\SQL2017;Initial Catalog=Shop;Integrated Security=True" Microsoft.EntityFrameworkCore.SqlServer --project Shop.ApplicationCore --output-dir Models --context ApplicationDbContext --context-dir "." --use-database-names --no-onconfiguring -f -t Kraj

2. Application First.

Uwaga! w tej architekturze gdzie migracja i modele są w osobnych projektach należy przed dodaniem migracji 'add-migration'
dodać ręcznie w klasie 'Shop.Infrastructure.ApplicationDbContext' deklaracje odwołań do nowych encji np:
public virtual DbSet<Kraj> Kraje { get; set; }
aby w klasie 'Shop.Infrastructure.ApplicationDbContextModelSnapshot' generator utworzył struktury dla tych modeli.

-- Dodaje nową migrację (plik) do folderu Migrations. Używać kiedy utworzona została nowa klasa w folderze Models.
Parametr ShopDB to nazwa pliku jaki zostanie wygenerowany podczas migracji i dodany do folderu Migrations.
https://docs.microsoft.com/pl-pl/ef/core/cli/powershell#add-migration
add-migration ShopDB

-- Aktualizuje strukturę bazy danych na podstawie plików migracyjnych znajdujących się w folderze Migrations. Jeśli baza nie istnieje zostanie utworzona.
-- Parametr –verbose pokazuje wszystkie operacje jakie są wykonywane.
https://docs.microsoft.com/pl-pl/ef/core/cli/powershell#update-database
update-database –verbose

-- Aktualizuje strukturę bazy danych na podstawie plików migracyjnych znajdujących się w folderze Migrations. Jeśli baza nie istnieje zostanie utworzona.
-- Aktualizacja wykorzystuje plik konfiguracyjny o nazwie ConfigurationPharmacy.cs znajdujący się w folderze Migrations.
update-database -ConfigurationTypeName ConfigurationShop -project Shop.Infrastructure –verbose
-- Konfiguracja aktualizacji.
public class ConfigurationShop : DbMigrationsConfiguration<DBContext>
{
    public ConfigurationShop()
    {
        CommandTimeout = 36000;
        AutomaticMigrationsEnabled = true; // Można wyłączyć migrację, w konsoli zgłoszony zostanie komunikat.
        MigrationsDirectory = @"Migrations"
    }
}

-- Usuwa ostatnią migrację.
https://docs.microsoft.com/pl-pl/ef/core/cli/powershell#remove-migration
remove-migration
